/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
void dfs(TreeNode* root, int &sum){
    if(root==NULL) return ;
    if(root->val%2==0)
    {
        if(root->left && root->left->left)sum+=root->left->left->val;
        if(root->left &&root->left->right)sum+=root->left->right->val;
        if(root->right &&root->right->right)sum+=root->right->right->val;
        if(root->right &&root->right->left)sum+=root->right->left->val;
    }
    dfs(root->left ,sum);
    dfs(root->right,sum); 


}
public:
    int sumEvenGrandparent(TreeNode* root) {
        if(root==NULL) return 0;
        int sum=0;
        dfs(root,sum);
        return sum;
    }
};
