/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void dfs(TreeNode* root,int level,vector<int>&v){
        if(root==NULL) return;
        dfs(root->left,level+1,v);
        v.push_back(root->val);
        dfs(root->right,level+1,v);
    }
    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {
        vector<int>result;
        vector<int>v,r;
        dfs(root1,0,v);
        dfs(root2,0,r);
        int i=0,j=0;
        while(i<v.size() && j<r.size()){
            if(v[i]<=r[j]){
                result.push_back(v[i]);
                i++;
            }
            else {
                result.push_back(r[j]);j++;
            }
        }
        while(i<v.size()){
            result.push_back(v[i]);i++;
        }
        while(j<r.size()){
            result.push_back(r[j]);
            j++;
        }
        return result;
    }
};
