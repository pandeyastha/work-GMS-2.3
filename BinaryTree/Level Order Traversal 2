/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
int height(TreeNode* root){
    if(root==NULL) return 0;
    return 1+max(height(root->left),height(root->right));
}
void dfs(TreeNode* root, int level, vector<vector<int>>&result,int h){
    if(root==NULL) return ;
    result[h-1-level].push_back(root->val);
    dfs(root->left,level+1,result,h);
    dfs(root->right,level+1,result,h);
}
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        if(root==NULL) return {};
        int h=height(root);
        vector<vector<int>>result(h);
        dfs(root,0,result,h);
        return result;
    }
};
