class Solution {
public:
    string destCity(vector<vector<string>>& paths) {
        
        for(int i=0;i<paths.size();++i){
            bool flag=0;
            for(int j=0;j<paths.size();++j){
                if(paths[i][1]==paths[j][0]) flag=1;
            }
            if(flag==0) return paths[i][1];
        }
        return "";
    }
};


--------------------------------------------------O(N^2 )          O(1) -----------------------------------------------------------------------------



-----------------------------------------------------------------------------------------
class Solution {
public:
    string destCity(vector<vector<string>>& paths) {
        unordered_map<string,int> mp1,mp2;
        for(auto x:paths) {mp1[x[0]]++;mp2[x[1]]++;}
        for(auto x:mp2) if(mp1.find(x.first)==mp1.end()) return x.first;
        return "";
        
    }
};


--------------------------------------------------------------O(NlogN)  O(N) -----------------------------------------------------------------------------
