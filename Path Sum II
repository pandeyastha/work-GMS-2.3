/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void dfs(TreeNode* root, vector<int>temp,vector<vector<int>>&result,int targetSum){
        if(!root) return ;
        targetSum-=root->val;
        temp.push_back(root->val);
        if(targetSum==0 && !root->left && !root->right) {result.push_back(temp);                                                        return;}
        dfs(root->left,temp,result,targetSum);
        dfs(root->right,temp,result,targetSum);
        return ;
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        if(root==NULL) return {};
        vector<vector<int>>result;
        dfs(root,{},result,targetSum);
        return result;
    }
};
